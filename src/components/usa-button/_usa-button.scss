@use "../../stylesheets/packages/uswds-core";

// Buttons variables

$button-context: "Button";
$button-stroke: inset 0 0 0 uswds-core.units($theme-button-stroke-width);

// Buttons
.usa-button {
  @include uswds-core.border-box-sizing;
  @include uswds-core.typeset($theme-button-font-family, null, 1);
  @include uswds-core.set-text-and-bg("primary", $context: $button-context);
  appearance: none;
  border: 0;
  border-radius: uswds-core.radius($theme-button-border-radius);
  cursor: pointer;
  display: inline-block;
  font-weight: uswds-core.font-weight("bold");
  margin-right: uswds-core.units(1);
  padding: uswds-core.units(1.5) uswds-core.units(2.5);
  text-align: center;
  text-decoration: none;
  width: 100%;

  @include uswds-core.at-media("mobile-lg") {
    width: auto;
  }

  &:visited {
    color: uswds-core.color("white");
  }

  &:hover,
  &.usa-button--hover {
    @include uswds-core.set-text-and-bg("primary-dark", $context: $button-context);
    border-bottom: 0;
    text-decoration: none;
  }

  &:active,
  &.usa-button--active {
    @include uswds-core.set-text-and-bg("primary-darker", $context: $button-context);
  }

  &:not([disabled]):focus,
  &:not([disabled]).usa-focus {
    outline-offset: uswds-core.units(0.5);
  }

  &:disabled {
    @include uswds-core.button-disabled;
  }
}

.usa-button--accent-cool {
  @include uswds-core.set-text-and-bg("accent-cool", $context: $button-context);

  &:visited {
    @include uswds-core.set-text-and-bg("accent-cool", $context: $button-context);
  }

  &:hover,
  &.usa-button--hover {
    @include uswds-core.set-text-and-bg("accent-cool-dark", $context: $button-context);
  }

  &:active,
  &.usa-button--active {
    @include uswds-core.set-text-and-bg("accent-cool-darker", $context: $button-context);
  }
}

.usa-button--accent-warm {
  @include uswds-core.set-text-and-bg("accent-warm", $context: $button-context);

  &:visited {
    @include uswds-core.set-text-and-bg("accent-warm", $context: $button-context);
  }

  &:hover,
  &.usa-button--hover {
    @include uswds-core.set-text-and-bg("accent-warm-dark", $context: $button-context);
  }

  &:active,
  &.usa-button--active {
    @include uswds-core.set-text-and-bg("accent-warm-darker", $context: $button-context);
  }
}

.usa-button--outline {
  background-color: uswds-core.color("transparent");
  box-shadow: $button-stroke uswds-core.color("primary");
  color: uswds-core.color("primary");

  &:visited {
    color: uswds-core.color("primary");
  }

  &:hover,
  &.usa-button--hover {
    background-color: uswds-core.color("transparent");
    box-shadow: $button-stroke uswds-core.color("primary-dark");
    color: uswds-core.color("primary-dark");
  }

  &:active,
  &.usa-button--active {
    background-color: uswds-core.color("transparent");
    box-shadow: $button-stroke uswds-core.color("primary-darker");
    color: uswds-core.color("primary-darker");
  }

  &.usa-button--inverse {
    $button-inverse-color: $theme-link-reverse-color;
    $button-inverse-hover-color: $theme-link-reverse-hover-color;
    $button-inverse-active-color: $theme-link-reverse-active-color;

    box-shadow: $button-stroke uswds-core.color("base-lighter");
    color: uswds-core.color($button-inverse-color);

    &:visited {
      color: uswds-core.color($button-inverse-color);
    }

    &:hover,
    &.usa-button--hover {
      box-shadow: $button-stroke uswds-core.color($button-inverse-hover-color);
      color: uswds-core.color($button-inverse-hover-color);
    }

    &:active,
    &.usa-button--active {
      background-color: transparent;
      box-shadow: $button-stroke uswds-core.color($button-inverse-active-color);
      color: uswds-core.color($button-inverse-active-color);
    }

    &.usa-button--unstyled {
      @include uswds-core.button-unstyled;
      color: uswds-core.color($button-inverse-color);

      &:visited {
        color: uswds-core.color($button-inverse-color);
      }

      &:hover,
      &.usa-button--hover {
        color: uswds-core.color($button-inverse-hover-color);
      }

      &:active,
      &.usa-button--active {
        color: uswds-core.color($button-inverse-active-color);
      }
    }
  }
}

.usa-button--base {
  @include uswds-core.set-text-and-bg("base", $context: $button-context);

  &:hover,
  &.usa-button--hover {
    @include uswds-core.set-text-and-bg("base-dark", $context: $button-context);
  }

  &:active,
  &.usa-button--active {
    @include uswds-core.set-text-and-bg("base-darker", $context: $button-context);
  }
}

.usa-button--secondary {
  @include uswds-core.set-text-and-bg("secondary", $context: $button-context);

  &:hover,
  &.usa-button--hover {
    @include uswds-core.set-text-and-bg("secondary-dark", $context: $button-context);
  }

  &:active,
  &.usa-button--active {
    @include uswds-core.set-text-and-bg("secondary-darker", $context: $button-context);
  }
}

.usa-button--big {
  border-radius: uswds-core.radius($theme-button-border-radius);
  font-size: uswds-core.font-size($theme-button-font-family, "lg");
  padding: uswds-core.units(2) uswds-core.units(3);
}

.usa-button--disabled {
  @include uswds-core.button-disabled;
}

.usa-button--outline-disabled,
.usa-button--outline-inverse-disabled,
.usa-button--outline:disabled,
.usa-button--outline-inverse:disabled,
.usa-button--outline-inverse:disabled {
  background-color: uswds-core.color("transparent");

  &:hover,
  &.usa-button--hover,
  &:active,
  &.usa-button--active,
  &:focus,
  &.usa-focus {
    background-color: uswds-core.color("transparent");
    border: 0;
  }
}

.usa-button--outline-disabled,
.usa-button--outline:disabled {
  box-shadow: $button-stroke uswds-core.color("disabled");
  color: uswds-core.color("disabled");

  &.usa-button--inverse {
    background-color: transparent;
    box-shadow: $button-stroke uswds-core.color("base");
    color: uswds-core.color("base");
  }
}

.usa-button--unstyled {
  @include uswds-core.button-unstyled;
}
